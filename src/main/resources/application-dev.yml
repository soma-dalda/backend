spring:
  config:
    import: 'aws-parameterstore:'
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: admin
    password: ${datasource.password}
    url: ${datasource.url}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  redis:
    host: ${redis.host}
    port: 6379

  #OAuth
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${oauth.google.id}
            client-secret: ${oauth.google.secret}
            scope: profile
          kakao:
            client-id: ${oauth.kakao.id}
            redirectUri: "http://dev.dalda.shop/login/oauth2/code/kakao"
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname
            client-name: Kakao
          naver:
            client-id: ${oauth.naver.id}
            client-secret: ${oauth.naver.secret}
            redirect-uri: "http://dev.dalda.shop/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope: name
            client-name: Naver
        provider:
          kakao:
            authorization_uri: https://kauth.kakao.com/oauth/authorize
            token_uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user_name_attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
# AWS
cloud:
  aws:
    credentials:
      accessKey: ${s3_deploy.access}
      secretKey: ${s3_deploy.secret}
    s3:
      bucket: ${s3.bukcet.name}
      dirOriginal: original/
      cloudFront: ${s3.cloudfront}
    region:
      static: ap-northeast-2
    stack:
      auto: false

#JWT
app:
  auth:
    tokenSecret: ${jwt.secret}
    tokenExpiration: 1800000
  oauth2:
    defaultUri : "https://test.dalda.shop/"
    loginRedirectUri: "https://test.dalda.shop/login"
    domain: ".dalda.shop"
    host: "test.dalda.shop"

#Swagger
springdoc:
  swagger-ui:
    path: /swagger-ui
    operations-sorter: alpha
    tags-sorter: alpha
  api-docs:
    path: /api-docs
  cache:
    disabled: true
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8

# AWS Parameter Store
aws:
  paramstore:
    enabled: true
    prefix: /config
    profile-separator: _
    name: dalda